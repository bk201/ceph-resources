# vi: set ft=ruby :

$script0 = <<-'SCRIPT0'
mkdir -p /scripts

cat <<'EOF' > /scripts/bootstrap.sh
#!/bin/bash -e
curl --silent --remote-name --location https://github.com/ceph/ceph/raw/octopus/src/cephadm/cephadm
chmod +x cephadm

./cephadm add-repo --release octopus
./cephadm install

mkdir -p /etc/ceph
local_ip="$(ip a s eth0 | egrep -o 'inet [0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}')"
local_ip="${local_ip##inet}"
cephadm bootstrap --skip-monitoring-stack --mon-ip $local_ip
EOF


cat <<'EOF' > /scripts/setup.sh
#!/bin/bash -e

ceph orch apply osd --all-available-devices
ceph tell mon.\* injectargs '--osd-pool-default-size=1'
ceph fs volume create a
ceph orch apply mds a
ceph osd pool create nfs
ceph orch apply nfs foo nfs ganesha
ceph dashboard ac-user-set-password admin admin --force-password
EOF


cat <<'EOF' > /scripts/create_export.sh
#!/bin/bash -e

USER="admin"
PASSWORD="admin"
API_URL=`ceph mgr services 2> /dev/null | jq -r .dashboard`
AUTH_URL="${API_URL}api/auth"
FS_URL_LIST_CEPHFS="${API_URL}api/cephfs"
TOKEN=$(curl -s --insecure -X POST $AUTH_URL -H "accept: */*" -H  "Content-Type: application/json" -d "{\"username\":\"${USER}\",\"password\":\"${PASSWORD}\"}" | jq -r '.token')

FSS=$(curl -s --insecure -X GET $FS_URL_LIST_CEPHFS -H "accept: */*" -H  "Content-Type: application/json" -H "Authorization: Bearer ${TOKEN}")

if [ "$FSS" = '[]' ]; then
    echo "No FS found!"
    exit 1
fi

FS_ID=$(curl -s --insecure -X GET $FS_URL_LIST_CEPHFS -H "accept: */*" -H  "Content-Type: application/json" -H "Authorization: Bearer ${TOKEN}" | jq -r '.[0].id')

curl -s --insecure "${API_URL}api/nfs-ganesha/export" -H 'Accept: application/json, text/plain, */*' -H 'Content-Type: application/json' -H "Authorization: Bearer ${TOKEN}" --data-raw '{"cluster_id":"foo","daemons":["foo.storage0"],"fsal":{"name":"CEPH","user_id":"admin","fs_name":"a","sec_label_xattr":null},"path":"/abc","tag":null,"pseudo":"/abc","access_type":"RW","squash":"no_root_squash","clients":[],"security_label":false,"protocols":[3,4],"transports":["TCP","UDP"]}'
EOF

cat <<'EOF' > /scripts/ls_dir.sh
#!/bin/bash -e

USER="admin"
PASSWORD="admin"
API_URL=`ceph mgr services 2> /dev/null | jq -r .dashboard`
AUTH_URL="${API_URL}api/auth"
FS_URL_LIST_CEPHFS="${API_URL}api/cephfs"
TOKEN=$(curl -s --insecure -X POST $AUTH_URL -H "accept: */*" -H  "Content-Type: application/json" -d "{\"username\":\"${USER}\",\"password\":\"${PASSWORD}\"}" | jq -r '.token')

FSS=$(curl -s --insecure -X GET $FS_URL_LIST_CEPHFS -H "accept: */*" -H  "Content-Type: application/json" -H "Authorization: Bearer ${TOKEN}")

if [ "$FSS" = '[]' ]; then
    echo "No FS found!"
    exit 1
fi

FS_ID=$(curl -s --insecure -X GET $FS_URL_LIST_CEPHFS -H "accept: */*" -H  "Content-Type: application/json" -H "Authorization: Bearer ${TOKEN}" | jq -r '.[0].id')
FS_URL_LS_DIR="${API_URL}api/cephfs/${FS_ID}/ls_dir?depth=1"
curl -s --insecure ${FS_URL_LS_DIR} -H "Authorization: Bearer ${TOKEN}" | jq
EOF

cat <<'EOF' > /scripts/reload_dashboard.sh
#!/bin/bash -e

ceph mgr module disable dashboard && sleep 5 &&  ceph mgr module enable dashboard
EOF

chmod +x /scripts/*
SCRIPT0

$script1 = <<-SCRIPT1
    set -o errexit
    setenforce 0
    yum install -y python36 podman lvm2 vim curl
SCRIPT1

Vagrant.configure("2") do |config|
  config.vm.synced_folder ".", "/vagrant", disabled: true
  config.vm.box = "centos/8"

  config.vm.define "storage0" do |storage0|
    storage0.vm.hostname = "storage0"
    storage0.vm.provider :libvirt do |libvirt|
      libvirt.memory = 1024
      libvirt.storage :file, :size => '8G', bus: "sata", serial: "storage0-0"
      libvirt.storage :file, :size => '8G', bus: "sata", serial: "storage0-1"
      libvirt.storage :file, :size => '8G', bus: "sata", serial: "storage0-2"
    end
  end

  config.vm.provision "shell", inline: $script0
  config.vm.provision "shell", inline: $script1
end

